{"version":3,"sources":["webpack://naughtypaw/./src/classes/angryHuman.js","webpack://naughtypaw/./src/classes/cat.js","webpack://naughtypaw/./src/classes/game.js","webpack://naughtypaw/./src/classes/human.js","webpack://naughtypaw/./src/classes/item.js","webpack://naughtypaw/./src/classes/sofa.js","webpack://naughtypaw/./src/classes/stashedItem.js","webpack://naughtypaw/./src/classes/table.js","webpack://naughtypaw/webpack/bootstrap","webpack://naughtypaw/./src/index.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACxBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACxCA,YAAY,mBAAO,CAAC,mCAAO;AAC3B,cAAc,mBAAO,CAAC,uCAAS;AAC/B,mBAAmB,mBAAO,CAAC,iDAAc;AACzC,aAAa,mBAAO,CAAC,qCAAQ;AAC7B,cAAc,mBAAO,CAAC,uCAAS;AAC/B,aAAa,mBAAO,CAAC,qCAAQ;AAC7B,oBAAoB,mBAAO,CAAC,mDAAe;;AAE3C;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpHA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,K;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACxCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7BA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;UCtBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,aAAa,mBAAO,CAAC,6CAAgB;;AAErC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,CAAC","file":"main.js","sourcesContent":["const CONSTANTS = {\n  HUMAN_WIDTH: 110,\n  HUMAN_HEIGHT: 130\n};\n\nconst angryHumanImg = new Image();\nangryHumanImg.src = './dist/assets/images/angryHuman.png';\n\nclass angryHuman {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = 40;\n    this.y = dimensions.height / 2 - 50;\n    this.img = angryHumanImg;\n    this.status = \"angry\";\n  }\n\n  drawHuman(ctx) {\n    ctx.fillStyle = \"transparent\";\n    ctx.fillRect(this.x, this.y, CONSTANTS.HUMAN_WIDTH, CONSTANTS.HUMAN_HEIGHT);\n    ctx.drawImage(this.img, this.x, this.y, CONSTANTS.HUMAN_WIDTH, CONSTANTS.HUMAN_HEIGHT);\n  }\n}\n\nmodule.exports = angryHuman;\n","const CONSTANTS = {\n  CAT_WIDTH: 100,\n  CAT_HEIGHT: 110\n};\n\nconst catImg = new Image();\ncatImg.src = './dist/assets/images/cat.png';\n\nconst happyCatImg = new Image();\nhappyCatImg.src = './dist/assets/images/happyCat.png';\n\nclass Cat {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = this.dimensions.width / 2;\n    this.y = this.dimensions.height - 180;\n    this.img = catImg;\n  }\n\n  animate(ctx, dir) {\n    this.moveCat(dir);\n    this.drawCat(ctx);\n  }\n\n  drawCat(ctx) {\n    ctx.fillStyle = \"transparent\";\n    ctx.fillRect(this.x, this.y, CONSTANTS.CAT_WIDTH, CONSTANTS.CAT_HEIGHT);\n    ctx.drawImage(this.img, this.x, this.y, CONSTANTS.CAT_WIDTH, CONSTANTS.CAT_HEIGHT);\n  }\n\n  moveCat(dir) {\n    this.x += dir;\n  }\n\n  changeImg(ctx) {\n    this.img = happyCatImg;\n    this.drawCat(ctx);\n  }\n}\n\nmodule.exports = Cat;\n","const Cat = require(\"./cat\");\nconst Human = require(\"./human\");\nconst angryHuman = require('./angryHuman');\nconst Sofa = require(\"./sofa\");\nconst Table = require(\"./table\");\nconst Item = require(\"./item\");\nconst stashedItem = require(\"./stashedItem\");\n\nclass Game {\n  constructor(canvas) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.dimensions = { width: canvas.width, height: canvas.height };\n\n    this.itemsNum = 3;\n    this.items = [];\n    this.stashedItems = [];\n    this.stashedItemsPile = [];\n\n    this.addItems();\n    this.play(0);\n  }\n\n  addItems() {\n    for (let i = 0; i < this.itemsNum; i++) {\n      this.items.push(new Item(this.dimensions));\n    }\n  }\n\n  stealItem() {\n    for (let i = 0; i < this.items.length; i++) {\n      if (Math.floor(this.cat.x) - Math.floor(this.items[i][\"x\"]) >= 0 &&\n        Math.floor(this.cat.x) - Math.floor(this.items[i][\"x\"]) <= 1.3) {\n          this.fetchItem(i);\n      }\n    }\n  }\n\n  fetchItem(itemIdx) {\n    this.items[itemIdx][\"x\"] = this.cat.x;\n    this.fetchedIdx = itemIdx;\n  }\n\n  stashItem() {\n    if (!Number.isInteger(this.fetchedIdx)) return null;\n\n    if (Math.floor(this.cat.x) === Math.floor(this.sofa.x)) {\n      this.stashedItems.push(this.items[this.fetchedIdx]);\n      this.stashedItems = [...new Set(this.stashedItems)];\n      this.stashedItemsPile.push(new stashedItem(this.dimensions));\n\n      this.items.splice(this.fetchedIdx, 1);\n      this.fetchedIdx = null;\n    }\n  }\n\n  play(dirCat) {\n    this.cat = new Cat(this.dimensions);\n    this.human = new Human(this.dimensions);\n    this.sofa = new Sofa(this.dimensions);\n    this.table = new Table(this.dimensions);\n    this.animate(dirCat);\n  }\n\n  lost() {\n    return (\n      !this.pauseCat && \n      Number.isInteger(this.fetchedIdx) && \n      this.human.status === \"checking\"\n    );\n  }\n\n  won() {\n    if (this.items.length === 0 && this.stashedItems.length === this.itemsNum) {\n      this.gameWon = true;\n    }\n  }\n\n  happyCat() {\n    if (this.gameWon) {\n      this.cat.changeImg(this.ctx);\n    }\n  }\n\n  angry() {\n    this.human = new angryHuman(this.dimensions);\n    this.human.drawHuman(this.ctx);[]\n  }\n\n  animate(dirCat, pauseCat, dt) {\n    this.pauseCat = pauseCat;\n\n    this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n    this.sofa.drawSofa(this.ctx);\n    this.table.drawTable(this.ctx);\n    this.cat.animate(this.ctx, dirCat);\n    this.human.animate(this.ctx, dt);\n\n    for (let i = 0; i < this.items.length; i++) {\n      if (i === this.fetchedIdx) {\n        this.items[i].animate(this.ctx, dirCat);\n      } else {\n        this.items[i].drawItem(this.ctx);\n      }\n    }\n\n    for (let i = 0; i < this.stashedItemsPile.length; i++) {\n      this.stashedItemsPile[i].drawItem(this.ctx);\n    }\n\n    this.won();\n    this.happyCat();\n    this.stealItem();\n    this.stashItem();\n  }\n}\n\nmodule.exports = Game;\n","const CONSTANTS = {\n  HUMAN_WIDTH: 110,\n  HUMAN_HEIGHT: 130\n};\n\nconst humanImg = new Image();\nhumanImg.src = './dist/assets/images/human.png';\n\nconst checkingHumanImg = new Image();\ncheckingHumanImg.src = './dist/assets/images/checkingHuman.png';\n\nclass Human {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = 40;\n    this.y = dimensions.height / 2 - 50;\n    this.img = humanImg;\n    this.status = \"working\";\n  }\n\n  animate(ctx, dt) {\n    this.drawHuman(ctx);\n\n    if (dt * 1000 >= 19 && dt * 1000 <= 20) {\n      this.moveHuman();\n    } \n  }\n\n  drawHuman(ctx) {\n    ctx.fillStyle = \"transparent\";\n    ctx.fillRect(this.x, this.y, CONSTANTS.HUMAN_WIDTH, CONSTANTS.HUMAN_HEIGHT);\n    ctx.drawImage(this.img, this.x, this.y, CONSTANTS.HUMAN_WIDTH, CONSTANTS.HUMAN_HEIGHT);\n  }\n\n  moveHuman() {\n    this.img = (this.img === checkingHumanImg) ? humanImg : checkingHumanImg;\n    this.status = (this.status === \"checking\") ? \"working\" : \"checking\";\n  }\n}\n\nmodule.exports = Human;\n","const CONSTANTS = {\n  ITEM_WIDTH: 60,\n  ITEM_HEIGHT: 60\n};\n\nconst itemImg = new Image();\nitemImg.src = './dist/assets/images/item.png';\n\nclass Item {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = (this.dimensions.width / 2 - 10) * Math.random();\n    this.y = this.dimensions.height - 120;\n    this.img = itemImg;\n  }\n\n  animate(ctx, dir) {\n    this.moveItem(dir);\n    this.drawItem(ctx);\n  }\n\n  drawItem(ctx) {\n    ctx.fillStyle = \"transparent\";\n    ctx.fillRect(this.x, this.y, CONSTANTS.ITEM_WIDTH, CONSTANTS.ITEM_HEIGHT);\n    ctx.drawImage(this.img, this.x, this.y, CONSTANTS.ITEM_WIDTH, CONSTANTS.ITEM_HEIGHT);\n  }\n\n  moveItem(dir) {\n    this.x += dir;\n  }\n}\n\nmodule.exports = Item;\n","const CONSTANTS = {\n  SOFA_WIDTH: 300,\n  SOFA_HEIGHT: 380\n};\n\nconst sofaImg = new Image();\nsofaImg.src = './dist/assets/images/sofa.png'\n\nclass Sofa {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = this.dimensions.width - CONSTANTS.SOFA_WIDTH - 20;\n    this.y = this.dimensions.height - CONSTANTS.SOFA_HEIGHT - 10;\n  }\n\n  drawSofa(ctx) {\n    ctx.fillStyle = \"beige\";\n    ctx.fillRect(this.x, this.y, CONSTANTS.SOFA_WIDTH, CONSTANTS.SOFA_HEIGHT);\n    ctx.drawImage(sofaImg, this.x, this.y, CONSTANTS.SOFA_WIDTH, CONSTANTS.SOFA_HEIGHT);\n  }\n}\n\nmodule.exports = Sofa;\n","const CONSTANTS = {\n  ITEM_WIDTH: 60,\n  ITEM_HEIGHT: 60\n};\n\nconst itemImg = new Image();\nitemImg.src = './dist/assets/images/item.png';\n\nclass stashedItem {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = this.getRandInt(this.dimensions.width - 300, this.dimensions.width - 90);\n    this.y = this.dimensions.height - 140;\n    this.img = itemImg;\n  }\n\n  getRandInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  drawItem(ctx) {\n    ctx.fillStyle = \"transparent\";\n    ctx.fillRect(this.x, this.y, CONSTANTS.ITEM_WIDTH, CONSTANTS.ITEM_HEIGHT);\n    ctx.drawImage(this.img, this.x, this.y, CONSTANTS.ITEM_WIDTH, CONSTANTS.ITEM_HEIGHT);\n  }\n}\n\nmodule.exports = stashedItem;\n","const CONSTANTS = {\n  TABLE_WIDTH: 180,\n  TABLE_HEIGHT: 200\n};\n\nconst tableImg = new Image();\ntableImg.src = './dist/assets/images/table.png';\n\nclass Table {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.x = 10;\n    this.y = this.dimensions.height / 6;\n  }\n\n  drawTable(ctx) {\n    ctx.fillStyle = \"beige\";\n    ctx.fillRect(this.x, this.y, CONSTANTS.TABLE_WIDTH, CONSTANTS.TABLE_HEIGHT);\n    ctx.drawImage(tableImg, this.x, this.y, CONSTANTS.TABLE_WIDTH, CONSTANTS.TABLE_HEIGHT);\n  }\n}\n\nmodule.exports = Table;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const Game = require('./classes/game');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let canvas = document.getElementById(\"game-canvas\");\n  let game = new Game(canvas);\n  let dirCat = 0, pauseCat = true, pauseGame = true;\n\n  requestAnimationFrame(loop);\n\n  const musicControls = document.getElementById(\"music-controls\");\n  const musicPlay = document.getElementById(\"music-play\");\n  const musicPause = document.getElementById(\"music-pause\");\n  const music = document.getElementById(\"music\");\n\n  const leftButton = document.getElementById(\"left-button\");\n  const rightButton = document.getElementById(\"right-button\");\n  const pauseButton = document.getElementById(\"pause-button\");\n  const restartButton = document.getElementById(\"restart-button\");\n\n  const gameInstruct = document.getElementById(\"instruction\");\n  const playingText = document.getElementById(\"playing-text\");\n  const gameoverText = document.getElementById(\"gameover-text\");\n  const wonText = document.getElementById(\"won-text\");\n\n  musicControls.addEventListener(\"click\", e => {\n    if (music.paused) {\n      music.play();\n      musicPlay.classList.add(\"hidden\");\n      musicPause.classList.remove(\"hidden\");\n    } else {\n      music.pause();\n      musicPause.classList.add(\"hidden\");\n      musicPlay.classList.remove(\"hidden\");\n    }\n  })\n\n  document.addEventListener(\"keydown\", e => {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n\n    switch(e.code) {\n      case \"ArrowLeft\":\n        dirCat = -1.3;\n        pauseCat = !pauseCat;\n        break;\n      case \"ArrowRight\":\n        dirCat = 1.3;\n        pauseCat = !pauseCat;\n        break;\n      case \"KeyR\":\n        gameoverText.classList.add(\"hidden\");\n        playingText.classList.add(\"hidden\");\n        wonText.classList.add(\"hidden\");\n        gameInstruct.classList.remove(\"hidden\");\n\n        dirCat = 0;\n        pauseCat = true;\n        pauseGame = true;\n        game = new Game(canvas);\n        break;\n      case \"Space\":\n        pauseGame = !pauseGame;\n\n        if (!pauseGame) {\n          gameInstruct.classList.add(\"hidden\");\n          gameoverText.classList.add(\"hidden\");\n          wonText.classList.add(\"hidden\");\n          playingText.classList.remove(\"hidden\");\n        } else {\n          playingText.classList.add(\"hidden\");\n          gameoverText.classList.add(\"hidden\");\n          wonText.classList.add(\"hidden\");\n          gameInstruct.classList.remove(\"hidden\");\n        }\n        \n        loop();\n        break;\n    }\n  })\n\n  leftButton.addEventListener(\"mousedown\", e => {\n    dirCat = -1.3;\n    pauseCat = !pauseCat;\n  });\n\n  rightButton.addEventListener(\"mousedown\", e => {\n    dirCat = 1.3;\n    pauseCat = !pauseCat;\n  });\n\n  pauseButton.addEventListener(\"mousedown\", e => {\n    pauseGame = !pauseGame;\n\n    if (!pauseGame) {\n      gameInstruct.classList.add(\"hidden\");\n      gameoverText.classList.add(\"hidden\");\n      wonText.classList.add(\"hidden\");\n      playingText.classList.remove(\"hidden\");\n    } else {\n      playingText.classList.add(\"hidden\");\n      gameoverText.classList.add(\"hidden\");\n      wonText.classList.add(\"hidden\");\n      gameInstruct.classList.remove(\"hidden\");\n    }\n\n    loop();\n  })\n\n  restartButton.addEventListener(\"mousedown\", e => {\n    gameoverText.classList.add(\"hidden\");\n    playingText.classList.add(\"hidden\");\n    wonText.classList.add(\"hidden\");\n    gameInstruct.classList.remove(\"hidden\");\n\n    dirCat = 0;\n    pauseCat = true;\n    pauseGame = true;\n    game = new Game(canvas);\n  });\n\n  function timestamp() {\n    return new Date().getTime();\n  }\n\n  let now, dt, last = timestamp();\n\n  function loop() {\n    if (pauseCat) {\n      dirCat = 0;\n    }\n\n    if (pauseGame) {\n      return cancelAnimationFrame(loop);\n    }\n\n    if (game.lost()) {\n      game.angry();\n      \n      gameInstruct.classList.add(\"hidden\");\n      playingText.classList.add(\"hidden\");\n      wonText.classList.add(\"hidden\");\n      gameoverText.classList.remove(\"hidden\");\n\n      return cancelAnimationFrame(loop);\n    }\n\n    if (game.gameWon) {\n      gameInstruct.classList.add(\"hidden\");\n      playingText.classList.add(\"hidden\");\n      gameoverText.classList.add(\"hidden\");\n      wonText.classList.remove(\"hidden\");\n\n      return cancelAnimationFrame(loop);\n    }\n\n    now = timestamp();\n    \n    dt = (now - last) / 1000;\n\n    game.animate(dirCat, pauseCat, dt);\n\n    last = now;\n\n    requestAnimationFrame(loop);\n  }\n});\n"],"sourceRoot":""}